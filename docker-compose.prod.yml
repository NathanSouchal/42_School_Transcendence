services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - backend_media:/app/media
    depends_on:
      - postgres
      - redis
    networks:
      - transcendence
    restart: always
    expose:
      - "8000"

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile
    depends_on:
      - backend
    volumes:
      - backend_media:/usr/share/nginx/html/media/
    ports:
      - "8080:80"
      - "8443:443"
    networks:
      - transcendence
    restart: always

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - transcendence
    restart: always

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - transcendence
    restart: always

networks:
  transcendence:
    driver: bridge

volumes:
  backend_media:
  postgres_data:
